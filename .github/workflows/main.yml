# This is a basic workflow to help you get started with Actions

name: IaC Mongo DB

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
    paths: ["terraform/**"]
  pull_request:
    branches: [ "main" ]
    paths: ["terraform/**"]
  workflow_dispatch:

jobs:
  terraform-aws:
    name: "Terraform AWS RDS"
    runs-on: ubuntu-latest
    steps:
      - name: "Configure AWS Credentials" 
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}

      
      - name: Verify DynamoDB Table
        run: aws dynamodb describe-table --table-name terraform-locks
        id: describe_table

      - name: Create Dynamodb table
        if: steps.describe_table.outputs.exit-code == 1
        run: aws dynamodb create-table --table-name terraform-locks --attribute-definitions AttributeName=LockID,AttributeType=S --key-schema AttributeName=LockID,KeyType=HASH --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5
          
      - name: Checkout
        uses: actions/checkout@v4
      
      #- name: Terraform init
      #  working-directory: ./terraform/mongo
       # run: terraform init -backend-config="bucket=${{ secrets.AWS_BUCKET_NAME }}" -backend-config="key=${{ secrets.AWS_BUCKET_FILE }}"

      - name: Terraform Init
        run: |
          cd terraform/mongo && terraform init \
            -backend-config="bucket=${{ secrets.AWS_BUCKET_NAME }}" \
            -backend-config="key=${{ secrets.AWS_BUCKET_FILE }}" \
            -backend-config="region=us-east-1" \
            -backend-config="dynamodb_table=terraform-locks"

      - name: Terraform Apply 
        working-directory: ./terraform/mongo
        run: terraform apply --auto-approve -var=MONGO_DB_ORG_ID=${{ secrets.MONGO_DB_ORG_ID }} -var=MONGO_DB_PUBLIC_KEY=${{ secrets.MONGO_DB_PUBLIC_KEY }} -var=MONGO_DB_PRIVATE_KEY=${{ secrets.MONGO_DB_PRIVATE_KEY }} -var=MONGO_DB_USER=${{ secrets.MONGO_DB_USER }} -var=MONGO_DB_PASSWORD=${{ secrets.MONGO_DB_PASSWORD }}

  terraform:
    name: "Terraform DB apply"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Terraform Mongo init
        working-directory: ./terraform/mongo
        run: terraform init

      - name: Terraform plan
        working-directory: ./terraform/mongo
        run: terraform plan -out=terraform.plan -var=MONGO_DB_ORG_ID=${{ secrets.MONGO_DB_ORG_ID }} -var=MONGO_DB_PUBLIC_KEY=${{ secrets.MONGO_DB_PUBLIC_KEY }} -var=MONGO_DB_PRIVATE_KEY=${{ secrets.MONGO_DB_PRIVATE_KEY }} -var=MONGO_DB_USER=${{ secrets.MONGO_DB_USER }} -var=MONGO_DB_PASSWORD=${{ secrets.MONGO_DB_PASSWORD }}
        
      - name: Upload Terraform plan
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: ./terraform/mongo/terraform.plan

      #- name: Terraform Apply 
        #working-directory: ./terraform/mongo
        #run: terraform apply --auto-approve -var=MONGO_DB_ORG_ID=${{ secrets.MONGO_DB_ORG_ID }} -var=MONGO_DB_PUBLIC_KEY=${{ secrets.MONGO_DB_PUBLIC_KEY }} -var=MONGO_DB_PRIVATE_KEY=${{ secrets.MONGO_DB_PRIVATE_KEY }} -var=MONGO_DB_USER=${{ secrets.MONGO_DB_USER }} -var=MONGO_DB_PASSWORD=${{ secrets.MONGO_DB_PASSWORD }}

      - name: Terraform Checkout 
        uses: actions/checkout@v4
        
      - name: Download Terraform plan
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan
          path: ./
          
      - name: Terraform apply
        run: |
          cd /home/runner/work/architect-burgers-infra-base/architect-burgers-infra-base
          terraform apply --auto-approve -var=MONGO_DB_ORG_ID=${{ secrets.MONGO_DB_ORG_ID }} -var=MONGO_DB_PUBLIC_KEY=${{ secrets.MONGO_DB_PUBLIC_KEY }} -var=MONGO_DB_PRIVATE_KEY=${{ secrets.MONGO_DB_PRIVATE_KEY }} -var=MONGO_DB_USER=${{ secrets.MONGO_DB_USER }} -var=MONGO_DB_PASSWORD=${{ secrets.MONGO_DB_PASSWORD }}
        
        
